// Generated by CoffeeScript 1.3.3
(function() {

  $.fn.progressBar = function(progress) {
    var bar, isSetup, label, options, replaceProgressBarColor, setLabelPosition, setup,
      _this = this;
    isSetup = function() {
      return _this.data('pb-setup') === true;
    };
    setup = function() {
      _this.html("<div class='pb-container'>              <div class='pb-progress-bar'>                <div class='pb-progress pb-transition' style='width:0%;display:none;float:left;'> </div>                <div class='pb-label' style='float:left;'> </div>                <div style='clear:both;'> </div>              </div>            </div>");
      return _this.data('pb-setup', true);
    };
    if (!isSetup()) {
      setup();
    }
    bar = $('.pb-progress', this);
    label = $('.pb-label', this);
    options = {
      0: 'red',
      20: 'yellow',
      50: 'blue',
      80: 'green'
    };
    replaceProgressBarColor = function(newColor) {
      var cssClass, _i, _len, _ref;
      _ref = bar.attr('class').split(' ');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cssClass = _ref[_i];
        if (/^pb-color.*$/.test(cssClass)) {
          bar.removeClass(cssClass);
        }
      }
      return bar.addClass("pb-color-" + newColor);
    };
    setLabelPosition = function(bar) {
      var barWidth, labelPadding, labelWidth;
      labelPadding = parseInt($(label).css('padding-left'));
      labelWidth = parseInt($(label).css('width'));
      barWidth = parseInt($(bar).css('width'));
      return label.css('margin-left', Math.max(0, barWidth - labelWidth - 2 * labelPadding));
    };
    return $('.pb-progress', this).animate({
      width: "" + progress + "%"
    }, {
      duration: 8000,
      easing: 'swing',
      step: function(progress) {
        var color;
        this.style.overflow = 'visible';
        progress = Math.ceil(progress);
        label.text("" + progress + "%");
        setLabelPosition(this);
        if (bar.css('width') === '0px') {
          if (!bar.is(":hidden")) {
            bar.hide();
          }
        }
        if (bar.css('width') !== '0px') {
          if (bar.is(":hidden")) {
            bar.show();
          }
        }
        color = options[progress];
        if (color != null) {
          return replaceProgressBarColor(color);
        }
      }
    });
  };

}).call(this);
